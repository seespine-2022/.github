name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
  group:
    ${{ github.repository }}-${{ github.event.number || github.head_ref ||
    github.sha }}-${{ github.workflow }}-${{ github.event_name ==
    'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - uses: xemberi/ai-pr-reviewer@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          debug: false
          review_simple_changes: false
          review_comment_lgtm: false
          openai_light_model: 'gpt-3.5-turbo'
          openai_heavy_model: 'gpt-4'
          openai_model_temperature: '0.05'
          openai_retries: '3'
          summarize: |
            Provide your final response in markdown with the following content:

            - **Summary**: A high-level summary of the overall change instead of 
              specific files within 80 words.
            - **Changes**: A markdown table of files and their summaries. Group files 
              with similar changes together into a single row to save space.
            - **Security impact**: Below the changes, include a security impact assessment.To conduct a security impact assessment, consider the following:
              Identify the data and systems affected by the changes.
              Evaluate the sensitivity and value of the data and systems.
              Identify potential threats and vulnerabilities introduced by the changes.
              Assess the likelihood and potential impact of these threats.
              Identify measures to mitigate the identified risks.
            - **Performance impact**: Below the security impact, include a performance impact assessment. To conduct a performance impact assessment, consider the following:
              Identify the parts of the system that will be affected by your changes.
              Evaluate the current performance of these parts.
              Predict how your changes will affect the performance (e.g., will it increase the load, require more memory, etc.).
              If possible, perform a load test or similar to measure the impact.
              Consider the trade-offs between the benefits of your changes and the potential performance impact.
              If the impact is significant, consider ways to optimize your changes.
            - **Compliance impact**: Below the performance impact, include a compliance impact assessment. Describe how the changes affect compliance with PIPEDA, GDPR, HIPAA, SOC2 and ISO27001. If this needs signing off or checking by QA/compliance, please tag @compliance here.
            - **Context**: This should include three lines. The first is literally 'Closes #' and is to be filled in by the coder. 
              The second is 'Version bump: ' and is either #major, #minor or #patch which you have to determine based on the changes. 
              The third is literally 'Emergency change: Yes/No', to be filled in by the coder.
            - **Validation**: The steps to be taken on the staging environment to validate the changes.
            - **Checklist**: A checklist of the following items. If you judge the item to be sufficiently done, please check the checkbox:
              My changes adhere to the coding standards and best practices established in the Code Review Guidelines.
              I have performed a self-review of my own code.
              I have commented my code, particularly in hard-to-understand areas.
              I have made corresponding changes to the documentation, if applicable.
              My changes generate no new warnings or errors.
              I have added tests that prove my changes are effective and increase code coverage.
              New and existing unit tests pass locally with my change, coverage is above 75%.
              If applicable, I have added new credentials or environment variables to KeyVault or other systems.
              I have notified relevant stakeholders of any potential service disruptions or changes in availability when this PR is merged.
              I understand that my changes may require updates to business continuity plans, if applicable.
              I have informed appropriate parties in case of changed functionality which may require additional training or instructions.
              I have informed appropriate parties in case of potential downtime coming from this change.
            - **Testing**: A checklist with the following items:
              Unit tests have passed. (check this item)
              Integration tests have passed.
              End to end test has passed.
              Vulnerability scanning has passed.
            - **Checklist reviewer**: A checklist with the following items:
              I have reviewed the code, and either no further changes were needed, or my feedback was discussed and/or implemented.
              All of the points in the submitters checklist are properly handled.

            Avoid additional commentary as this summary will be added as a comment on the 
            GitHub pull request. Use the respective titles and they must be H2.
          bot_icon: '<img src="https://avatars.githubusercontent.com/u/112554362?s=200&v=4" alt="Image description" width="20" height="20">'